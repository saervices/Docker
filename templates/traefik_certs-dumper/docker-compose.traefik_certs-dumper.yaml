---
services:
  traefik_certs-dumper:
    ######################################################################
    # --- CONTAINER BASICS
    ######################################################################
    # image: ${TRAEFIK_CERTS_DUMPER_IMAGE:?Image required}                                                                                                      # Pull image from registry; uncomment build section below for local images
    container_name: ${APP_NAME:?App name required}-${TRAEFIK_CERTS_DUMPER_APP_NAME}                                                                             # Stable container name for easier orchestration
    hostname: ${APP_NAME}-${TRAEFIK_CERTS_DUMPER_APP_NAME}                                                                                                      # Hostname inside the container for consistent service discovery
    restart: unless-stopped                                                                                                                                     # Automatically restart unless manually stopped
    build:                                                                                                                                                      # Optional: build image from local Dockerfile
      context: .
      dockerfile: dockerfiles/dockerfile.traefik-certs-dumper.scp

    ######################################################################
    # --- SECURITY SETTINGS
    ######################################################################
    user: "${APP_UID:-1000}:${APP_GID:-1000}"                                                                                                                   # Run as non-root by default; override only if the image already handles user switching
    read_only: true                                                                                                                                             # Lock root filesystem; only declared volumes remain writable
    cap_drop:                                                                                                                                                   # Drop all capabilities by default
      - ALL
    # cap_add:                                                                                                                                                  # Add only the minimum required capabilities (e.g., NET_BIND_SERVICE)
    #   - NET_BIND_SERVICE
    security_opt:
      - no-new-privileges:true                                                                                                                                  # Prevent privilege escalation
      - apparmor=${TRAEFIK_CERTS_DUMPER_APPARMOR_PROFILE:-docker-default}                                                                                       # Require AppArmor confinement on compatible hosts

    ######################################################################
    # --- SYSTEM RUNTIME
    ######################################################################
    init: true                                                                                                                                                  # PID 1 is tini â€“ handles zombies properly
    stop_grace_period: 30s                                                                                                                                      # Give app time to shut down gracefully
    oom_score_adj: -500                                                                                                                                         # Reduce likelihood of getting killed under memory pressure
    tmpfs:                                                                                                                                                      # Ephemeral storage in RAM, auto-cleared on restart
      - /run                                                                                                                                                    # Runtime files (PID files, sockets, etc.)
      - /tmp                                                                                                                                                    # Short-lived temp files; faster and auto-cleared on restart
      - /var/tmp                                                                                                                                                # Some apps expect /var/tmp; remove this line if the workload does not touch it
      - /root/.ssh                                                                                                                                              # Mount /root/.ssh as tmpfs for the scp command (known_hosts)

    ######################################################################
    # --- FILESYSTEM & SECRETS
    ######################################################################
    volumes:                                                                                                                                                    # Bind only the paths the app truly needs (avoid mounting host root paths)
      - /etc/localtime:/etc/localtime:ro                                                                                                                        # Synchronise container time with host time
      - /etc/timezone:/etc/timezone:ro                                                                                                                          # Supply timezone information
      - /root/.ssh/id_rsa:/root/.ssh/id_rsa:ro                                                                                                                  # Read the id_rsa file to get ssh access to remote server
      - ./scripts/post-hook.sh:/config/post-hook.sh:ro                                                                                                          # Access to the script that should run
      - ./appdata/config/certs/:/data/:rw                                                                                                                       # Traefik certificate store
    # secrets:                                                                                                                                                  # Enforce provision of sensitive material via Docker secrets
    #   - APP_PASSWORD

    ######################################################################
    # --- NETWORKING / REVERSE PROXY
    ######################################################################
    # labels:                                                                                                                                                   # Metadata for service discovery or reverse proxies (Traefik, Caddy, etc.)
    #   - "traefik.enable=true"                                                                                                                                 # Enable Traefik routing for this container
    #   - "traefik.http.routers.${APP_NAME}-rtr.rule=${TRAEFIK_HOST}"                                                                                           # Traefik router rule; supply escaped Host() rule via .env
    #   - "traefik.http.services.${APP_NAME}-svc.loadBalancer.server.port=${TRAEFIK_PORT:?Port required}"                                                       # Internal container port exposed to the proxy
    #   - "traefik.http.routers.${APP_NAME}-rtr.middlewares=authentik-proxy@file"                                                                               # Optional middleware example (authentication, rate limiting, etc.)
    # ports:                                                                                                                                                    # Optional: exposed ports
    #   - 8080:80
    # expose:                                                                                                                                                   # Optional: expose without publishing
    #   - 80
    networks:                                                                                                                                                   # Define which Docker networks the container connects to (controls communication and isolation)
      - backend
      # - frontend
    # extra_hosts:                                                                                                                                              # Optional: manual host entries
    #   - "host.docker.internal:host-gateway"

    ######################################################################
    # --- RUNTIME / ENVIRONMENT
    ######################################################################
    # command: ['your', 'default', 'command']                                                                                                                   # Override default container command
    entrypoint: >-                                                                                                                                              # Override default container entrypoint
      sh -c '
        set -e

        # Wait for cloudflare-acme.json to exist and contain at least one certificate
        while [ ! -f /data/cloudflare-acme.json ] || \
              [ "$(jq "[.[].Certificates | length] | add" /data/cloudflare-acme.json 2>/dev/null)" -eq 0 ]; do
          sleep 1
        done

        # Start traefik-certs-dumper with watcher and post-hook
        traefik-certs-dumper file \
          --domain-subdir \
          --crt-ext=.pem \
          --key-ext=.pem \
          --version v3 \
          --watch \
          --hook-timeout 30s \
          --source /data/cloudflare-acme.json \
          --dest /data/files \
          --post-hook "sh /config/post-hook.sh"
      '
    # environment:                                                                                                                                              # Environment variables for container configuration
    #   ENV_VAR_EXAMPLE: ${ENV_VAR_EXAMPLE}
    #   APP_PASSWORD_FILE: /run/secrets/APP_PASSWORD 
    logging:                                                                                                                                                    # Configure log driver and limits to control log size and rotation
      driver: "json-file"
      options:
        max-size: "10m"                                                                                                                                         # Max log file size before rotation
        max-file: "3"                                                                                                                                           # Keep up to 3 rotated log files
    healthcheck:                                                                                                                                                # Periodic container health check to ensure service availability
      test: ["CMD", "test", "-f", "/data/cloudflare-acme.json"]                                                                                                 # Adjust URL/tooling to match the image (install curl or replace with wget/netcat)
      interval: 30s                                                                                                                                             # Time between checks
      timeout: 5s                                                                                                                                               # Time to wait for response
      retries: 3                                                                                                                                                # Number of retries before marking unhealthy
      start_period: 10s                                                                                                                                         # Give the container time to initialize before health checks start
    stdin_open: false                                                                                                                                           # Optional: keep STDIN open
    tty: false                                                                                                                                                  # Disable terminal allocation; used for non-interactive containers

    ######################################################################
    # --- DEPENDENCIES
    ######################################################################
    depends_on:                                                                                                                                                 # Ensure these services report healthy status before starting this one
      app:
        condition: service_healthy

    ######################################################################
    # --- RESOURCE LIMITS
    ######################################################################
    mem_limit: ${TRAEFIK_CERTS_DUMPER_MEM_LIMIT:-512m}                                                                                                          # Upper bound memory allocation (raise cautiously once monitored)
    cpus: ${TRAEFIK_CERTS_DUMPER_CPU_LIMIT:-1.0}                                                                                                                # Fractional CPU quota; increase only when the workload needs it
    pids_limit: ${TRAEFIK_CERTS_DUMPER_PIDS_LIMIT:-128}                                                                                                         # Cap number of processes/threads to mitigate fork bombs
    shm_size: ${TRAEFIK_CERTS_DUMPER_SHM_SIZE:-64m}                                                                                                             # Shared memory segment; bump for browsers or multimedia workloads
    # ulimits:                                                                                                                                                  # Additional fine-grained limits (e.g., nofile, nproc)

# volumes:
#   data:
#     driver: local                                                                                                                                             # Local named volume placeholder (swap for cloud/backed driver if required)

# secrets:                                                                                                                                                      # Define sensitive data (like passwords, tokens, keys) securely and inject into services at runtime
#   APP_PASSWORD:
#     file: ${APP_PASSWORD_PATH:?Secret path required}/${APP_PASSWORD_FILENAME:?Secret filename required}                                                       # Load secret material from host (ensure correct permissions)

networks:
  # frontend:
  #   external: true
  backend:
    external: true